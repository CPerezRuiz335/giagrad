:py:mod:`giagrad.shapeops`
==========================

.. py:module:: giagrad.shapeops


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   giagrad.shapeops.Permute




.. py:class:: Permute(*tensors, axes: Tuple[int])

   Bases: :py:obj:`giagrad.tensor.Context`

   Abstract class for all operators defined in mathops, reductionsops, etc
   An operator creates an instance of itself with class method forward that
   contains the parents of the Tensor created by Tensor.comm()

   Operators are just extensions of Tensor class to have Tensor functionality 
   self contained but separated in different files. 

   Attributes
   ----------
   parents: Tuple[Any, ...]
       operands/Tensors of the operator, can contain other values with Tensor.comm(.., **kwargs)


   .. py:method:: forward(t1, axes=None) -> Tuple[numpy.typing.NDArray, Permute]
      :classmethod:

      Main function for forward pass.


   .. py:method:: backward(partial: numpy.typing.NDArray)

      Partial is already p.grad but not unpermuted


   .. py:method:: __str__()

      For graphviz visualization.



