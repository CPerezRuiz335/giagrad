:py:mod:`giagrad.optim.SGD`
===========================

.. py:module:: giagrad.optim.SGD


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   giagrad.optim.SGD.Optimizer
   giagrad.optim.SGD.SGD




.. py:class:: Optimizer(params: List[giagrad.tensor.Tensor])

   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: step()
      :abstractmethod:


   .. py:method:: zero_grad()



.. py:class:: SGD(params: List[giagrad.tensor.Tensor], lr: float = 0.001, momentum: float = 0, weight_decay: float = 0, dampening: float = 0, nesterov: bool = False, maximize: bool = False)

   Bases: :py:obj:`Optimizer`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: step()



