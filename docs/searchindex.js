Search.setIndex({"docnames": ["autoapi/conf/index", "autoapi/giagrad/display/index", "autoapi/giagrad/display/prototype/index", "autoapi/giagrad/index", "autoapi/giagrad/initializers/index", "autoapi/giagrad/mathops/index", "autoapi/giagrad/mlops/index", "autoapi/giagrad/nn/index", "autoapi/giagrad/nn/layers/dropout/index", "autoapi/giagrad/nn/layers/index", "autoapi/giagrad/nn/layers/layers/index", "autoapi/giagrad/nn/loss/CrossEntropyLoss/index", "autoapi/giagrad/nn/loss/index", "autoapi/giagrad/nn/module/index", "autoapi/giagrad/optim/SGD/index", "autoapi/giagrad/optim/index", "autoapi/giagrad/reductionops/index", "autoapi/giagrad/shapeops/index", "autoapi/giagrad/tensor/index", "autoapi/index", "autoapi/layers_loss/index", "autoapi/tensor_intializers/index", "autoapi/tensor_mloperations/index", "autoapi/tensor_moperations/index", "index"], "filenames": ["autoapi/conf/index.rst", "autoapi/giagrad/display/index.rst", "autoapi/giagrad/display/prototype/index.rst", "autoapi/giagrad/index.rst", "autoapi/giagrad/initializers/index.rst", "autoapi/giagrad/mathops/index.rst", "autoapi/giagrad/mlops/index.rst", "autoapi/giagrad/nn/index.rst", "autoapi/giagrad/nn/layers/dropout/index.rst", "autoapi/giagrad/nn/layers/index.rst", "autoapi/giagrad/nn/layers/layers/index.rst", "autoapi/giagrad/nn/loss/CrossEntropyLoss/index.rst", "autoapi/giagrad/nn/loss/index.rst", "autoapi/giagrad/nn/module/index.rst", "autoapi/giagrad/optim/SGD/index.rst", "autoapi/giagrad/optim/index.rst", "autoapi/giagrad/reductionops/index.rst", "autoapi/giagrad/shapeops/index.rst", "autoapi/giagrad/tensor/index.rst", "autoapi/index.rst", "autoapi/layers_loss/index.rst", "autoapi/tensor_intializers/index.rst", "autoapi/tensor_mloperations/index.rst", "autoapi/tensor_moperations/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">conf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.display</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.display.prototype</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.initializers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.mathops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.mlops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn.layers.dropout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn.layers.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn.loss.CrossEntropyLoss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.nn.module</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.optim.SGD</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.optim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.reductionops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.shapeops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">giagrad.tensor</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">layers_loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensor_intializers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensor_mloperations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensor_moperations</span></code>", "Welcome to giagrad\u2019s documentation!"], "terms": {"project": 0, "giagrad": [0, 19], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23], "copyright": 0, "2023": 0, "carlo": 0, "perez": 0, "author": 0, "releas": 0, "1": [0, 3, 4, 7, 11, 12, 18, 19], "0": [0, 3, 7, 8, 9, 11, 12, 14, 15, 18], "extens": [0, 5, 6, 11, 16, 17, 18], "sphinx": [0, 19], "ext": 0, "durat": 0, "doctest": 0, "autodoc": 0, "viewcod": 0, "autoapi_typ": 0, "python": 0, "autoapi_dir": 0, "templates_path": 0, "_templat": 0, "exclude_pattern": 0, "_build": 0, "thumb": 0, "db": 0, "ds_store": 0, "html_theme": 0, "pydata_sphinx_them": 0, "html_static_path": 0, "_static": 0, "prototyp": [1, 3, 19], "draw_dot": [1, 2], "root": [1, 2], "format_": [1, 2], "svg": [1, 2], "rankdir": [1, 2], "lr": [1, 2, 14, 15], "fontsiz": 2, "12": 2, "trace": 2, "tensor": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "fun": 2, "callabl": [2, 3, 7, 13, 16], "tensor2nod": 2, "isop": 2, "fals": [2, 3, 14, 15, 18], "displai": [3, 19], "nn": [3, 4, 19], "layer": [3, 7, 19], "dropout": [3, 7, 9, 19], "loss": [3, 7, 19], "crossentropyloss": [3, 7, 12, 19], "modul": [3, 7, 9, 19, 24], "optim": [3, 19], "sgd": [3, 15, 19], "initi": [3, 19], "mathop": [3, 6, 11, 16, 17, 18, 19], "mlop": [3, 19], "reductionop": [3, 19], "shapeop": [3, 19], "data": [3, 18], "requires_grad": [3, 18], "bool": [3, 7, 9, 10, 14, 15, 16, 18], "context": [3, 5, 6, 11, 16, 17, 18], "none": [3, 4, 16, 17, 18], "name": [3, 7, 13, 18], "str": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18], "dtype": [3, 18], "np": [3, 18], "float32": [3, 18], "properti": [3, 18], "shape": [3, 18], "tupl": [3, 5, 6, 11, 16, 17, 18], "int": [3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18], "ellipsi": [3, 5, 16, 18], "type": [3, 5, 6, 7, 8, 11, 12, 16, 17, 18], "size": [3, 18], "ndim": [3, 7, 8, 9, 18], "t": [3, 18], "__array_ufunc__": [3, 18], "ndarrai": [3, 5, 6, 7, 8, 11, 12, 16, 17, 18], "weight": [3, 7, 11, 12, 18], "grad": [3, 5, 6, 11, 16, 17, 18], "gradient": [3, 5, 6, 11, 16, 18], "indic": [3, 18], "automat": [3, 5, 6, 11, 16, 18], "differenti": [3, 5, 6, 11, 16, 18], "i": [3, 17, 18], "need": [3, 18], "option": [3, 16, 18], "variabl": [3, 18], "visual": [3, 5, 6, 11, 16, 17, 18], "_ctx": [3, 18], "defin": [3, 5, 6, 11, 16, 17, 18], "parent": [3, 5, 6, 11, 16, 17, 18], "node": [3, 18], "creat": [3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "like": [3, 18], "_prev": [3, 18], "_op": [3, 18], "micrograd": [3, 18, 23], "__slots__": [3, 18], "backward": [3, 5, 6, 11, 16, 17, 18], "debug": [3, 18], "karpathi": [3, 18, 23], "k": [3, 18], "topolog": [3, 18], "sort": [3, 18], "postord": [3, 18], "revers": [3, 18], "no_grad": [3, 18], "requires_grad_": [3, 18], "__repr__": [3, 7, 13, 18], "return": [3, 7, 8, 9, 10, 13, 18], "repr": [3, 7, 13, 18], "self": [3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18], "__str__": [3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18], "classmethod": [3, 5, 6, 11, 16, 17, 18], "empti": [3, 18], "kwarg": [3, 5, 6, 11, 16, 17, 18], "zero": [3, 18], "ones": [3, 18], "constant": [3, 18], "val": [3, 18], "normal": [3, 4, 18], "mu": [3, 4, 18], "sigma": [3, 4, 18], "uniform": [3, 4, 18], "b": [3, 4, 18], "dirac": [3, 4, 18], "group": [3, 4, 18], "xavier_uniform": [3, 4, 18], "gain": [3, 4, 18], "xavier_norm": [3, 4, 18], "kaiming_uniform": [3, 4, 18], "neg_slop": [3, 4, 6, 18], "mode": [3, 4, 18], "fan_in": [3, 18], "nonlinear": [3, 4, 18], "leaky_relu": [3, 18], "kaiming_norm": [3, 4, 18], "spars": [3, 4, 18], "sparsiti": [3, 4, 18], "std": [3, 4, 18], "01": [3, 18], "orthogon": [3, 4, 18], "comm": [3, 5, 6, 11, 16, 17, 18], "oper": [3, 5, 6, 11, 16, 17, 18], "sqrt": [3, 18], "squar": [3, 18], "exp": [3, 5, 18], "log": [3, 5, 18], "reciproc": [3, 5, 18], "ab": [3, 5, 18], "__neg__": [3, 18], "abstract": [3, 5, 6, 7, 11, 13, 14, 16, 17, 18], "clip": [3, 18], "min_": [3, 18], "max_": [3, 18], "sign": [3, 18], "relu": [3, 6, 18], "sigmoid": [3, 6, 18], "elu": [3, 6, 18], "alpha": [3, 6, 18], "silu": [3, 6, 18], "beta": [3, 6, 18], "tanh": [3, 6, 18], "leakyrelu": [3, 6, 18], "softplu": [3, 6, 18], "limit": [3, 6, 18], "20": [3, 18], "quick_gelu": [3, 18], "gelu": [3, 6, 18], "relu6": [3, 6, 18], "mish": [3, 18], "hardswish": [3, 6, 18], "softmax": [3, 6, 18], "axi": [3, 6, 7, 11, 12, 16, 18], "log_softmax": [3, 11, 18], "__add__": [3, 18], "x": [3, 7, 8, 9, 10, 13, 18], "__radd__": [3, 18], "__sub__": [3, 18], "__rsub__": [3, 18], "__mul__": [3, 18], "__rmul__": [3, 18], "__pow__": [3, 18], "__rpow__": [3, 18], "__matmul__": [3, 18], "__rmatmul__": [3, 18], "__truediv__": [3, 18], "__rtruediv__": [3, 18], "__iadd__": [3, 18], "__isub__": [3, 18], "__imul__": [3, 18], "__ipow__": [3, 18], "__itruediv__": [3, 18], "__imatmul__": [3, 18], "mean": [3, 7, 11, 12, 16, 18], "keepdim": [3, 16, 18], "sum": [3, 16, 18], "max": [3, 18], "min": [3, 18], "add": [3, 5, 18], "sub": [3, 5, 18], "mul": [3, 5, 18], "pow": [3, 5, 18], "matmul": [3, 5, 18], "div": [3, 5, 18], "permut": [3, 17, 18], "ax": [3, 17, 18], "transpos": [3, 18], "dim0": [3, 18], "dim1": [3, 18], "base": [3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "abc": [3, 7, 8, 9, 10, 13, 14, 15, 18], "helper": [3, 7, 8, 9, 10, 13, 14, 15], "provid": [3, 7, 8, 9, 10, 13, 14, 15], "standard": [3, 7, 8, 9, 10, 13, 14, 15], "wai": [3, 7, 8, 9, 10, 13, 14, 15], "an": [3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "us": [3, 7, 8, 9, 10, 13, 14, 15], "inherit": [3, 7, 8, 9, 10, 13, 14, 15], "__setattr__": [3, 7, 13], "kei": [3, 7, 13], "valu": [3, 5, 6, 7, 11, 13, 16, 17, 18], "implement": [3, 7, 13], "setattr": [3, 7, 13], "train": [3, 7, 13], "eval": [3, 7, 13], "appli": [3, 7, 13], "fn": [3, 7, 13, 16], "paramet": [3, 7, 13], "list": [3, 7, 13, 14, 15], "zero_grad": [3, 7, 13, 14], "__call__": [3, 7, 8, 9, 10, 11, 12, 13], "reduct": [3, 7, 11, 12], "y_true": [3, 7, 11, 12], "numpi": [3, 5, 6, 7, 8, 11, 12, 16, 17, 18], "mean_axi": [3, 7, 11, 12], "linear": [3, 7, 9, 10], "in_featur": [3, 7, 9, 10], "out_featur": [3, 7, 9, 10], "bia": [3, 7, 9, 10], "true": [3, 7, 9, 10], "p": [3, 7, 8, 9, 17], "float": [3, 6, 7, 8, 9, 14, 15, 16, 18], "5": [3, 7, 8, 9], "dropout1d": [3, 7, 8, 9], "dropoutnd": [3, 7, 8, 9], "__check": [3, 7, 8, 9], "dropout2d": [3, 7, 8, 9], "dropout3d": [3, 7, 8, 9], "calculate_gain": [3, 4], "http": 4, "pytorch": 4, "org": 4, "doc": 4, "stabl": 4, "_modul": 4, "torch": 4, "init": 4, "html": 4, "_calculate_fan_in_and_fan_out": 4, "_calculate_correct_fan": 4, "collaps": 5, "partial": [5, 6, 11, 16, 17, 18], "p_shape": [5, 16], "all": [5, 6, 11, 16, 17, 18], "reductionsop": [5, 6, 11, 16, 17, 18], "etc": [5, 6, 11, 16, 17, 18], "instanc": [5, 6, 11, 16, 17, 18], "itself": [5, 6, 11, 16, 17, 18], "method": [5, 6, 11, 16, 17, 18], "forward": [5, 6, 11, 16, 17, 18], "contain": [5, 6, 11, 16, 17, 18, 19], "ar": [5, 6, 11, 16, 17, 18], "just": [5, 6, 11, 16, 17, 18], "have": [5, 6, 11, 16, 17, 18], "separ": [5, 6, 11, 16, 17, 18], "differ": [5, 6, 11, 16, 17, 18], "file": [5, 6, 11, 16, 17, 18], "ani": [5, 6, 11, 16, 17, 18], "operand": [5, 6, 11, 16, 17, 18], "can": [5, 6, 11, 16, 17, 18], "other": [5, 6, 11, 16, 17, 18], "t1": [5, 6, 11, 16, 17], "t2": 5, "main": [5, 6, 11, 16, 17, 18], "pass": [5, 6, 11, 16, 17, 18], "backprop": [5, 6, 11, 16, 18], "updat": [5, 6, 11, 16, 18], "output": [5, 6, 11, 16, 18], "For": [5, 6, 11, 16, 17, 18], "graphviz": [5, 6, 11, 16, 17, 18], "function": [6, 11, 17, 18], "child_data": 6, "ddbourgin": 6, "ml": 6, "logsoftmax": 6, "_random_dims_to_zero": 8, "r": 8, "crossentropi": 11, "one_hot": 11, "y": 11, "param": [14, 15], "step": [14, 15], "001": [14, 15], "momentum": [14, 15], "weight_decai": [14, 15], "dampen": [14, 15], "nesterov": [14, 15], "maxim": [14, 15], "expand": 16, "minmax": 16, "__constant": 16, "alreadi": 17, "unpermut": 17, "save_for_backward": 18, "thi": 19, "page": [19, 24], "auto": 19, "gener": 19, "document": 19, "conf": [19, 24], "tensor_moper": [19, 24], "layers_loss": [19, 24], "tensor_mloper": [19, 24], "tensor_inti": [19, 24], "autoapi": 19, "featur": 20, "100": 20, "ob": 20, "200": 20, "test_loss": 20, "test_init": 21, "echo": 21, "test_op": 22, "test_more_op": [22, 23], "test_more_more_op": 22, "test_sanity_check": 23, "test_reduct": 23, "test_more_reduct": 23, "api": 24, "refer": 24, "index": 24, "search": 24}, "objects": {"": [[0, 0, 0, "-", "conf"], [3, 0, 0, "-", "giagrad"], [20, 0, 0, "-", "layers_loss"], [21, 0, 0, "-", "tensor_intializers"], [22, 0, 0, "-", "tensor_mloperations"], [23, 0, 0, "-", "tensor_moperations"]], "conf": [[0, 1, 1, "", "author"], [0, 1, 1, "", "autoapi_dirs"], [0, 1, 1, "", "autoapi_type"], [0, 1, 1, "", "copyright"], [0, 1, 1, "", "exclude_patterns"], [0, 1, 1, "", "extensions"], [0, 1, 1, "", "html_static_path"], [0, 1, 1, "", "html_theme"], [0, 1, 1, "", "project"], [0, 1, 1, "", "release"], [0, 1, 1, "", "templates_path"]], "giagrad": [[3, 2, 1, "", "CrossEntropyLoss"], [3, 2, 1, "", "Dropout"], [3, 2, 1, "", "Dropout1d"], [3, 2, 1, "", "Dropout2d"], [3, 2, 1, "", "Dropout3d"], [3, 2, 1, "", "Linear"], [3, 2, 1, "", "Module"], [3, 2, 1, "", "Tensor"], [3, 6, 1, "", "calculate_gain"], [1, 0, 0, "-", "display"], [4, 0, 0, "-", "initializers"], [5, 0, 0, "-", "mathops"], [6, 0, 0, "-", "mlops"], [7, 0, 0, "-", "nn"], [15, 0, 0, "-", "optim"], [16, 0, 0, "-", "reductionops"], [17, 0, 0, "-", "shapeops"], [18, 0, 0, "-", "tensor"]], "giagrad.CrossEntropyLoss": [[3, 3, 1, "", "__call__"]], "giagrad.Dropout": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__str__"]], "giagrad.Dropout1d": [[3, 3, 1, "", "__check"]], "giagrad.Dropout2d": [[3, 3, 1, "", "__check"]], "giagrad.Dropout3d": [[3, 3, 1, "", "__check"]], "giagrad.Linear": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__str__"]], "giagrad.Module": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__repr__"], [3, 3, 1, "", "__setattr__"], [3, 3, 1, "", "__str__"], [3, 3, 1, "", "apply"], [3, 3, 1, "", "eval"], [3, 3, 1, "", "parameters"], [3, 3, 1, "", "train"], [3, 3, 1, "", "zero_grad"]], "giagrad.Tensor": [[3, 4, 1, "", "T"], [3, 3, 1, "", "__add__"], [3, 5, 1, "", "__array_ufunc__"], [3, 3, 1, "", "__iadd__"], [3, 3, 1, "", "__imatmul__"], [3, 3, 1, "", "__imul__"], [3, 3, 1, "", "__ipow__"], [3, 3, 1, "", "__isub__"], [3, 3, 1, "", "__itruediv__"], [3, 3, 1, "", "__matmul__"], [3, 3, 1, "", "__mul__"], [3, 3, 1, "", "__neg__"], [3, 3, 1, "", "__pow__"], [3, 3, 1, "", "__radd__"], [3, 3, 1, "", "__repr__"], [3, 3, 1, "", "__rmatmul__"], [3, 3, 1, "", "__rmul__"], [3, 3, 1, "", "__rpow__"], [3, 3, 1, "", "__rsub__"], [3, 3, 1, "", "__rtruediv__"], [3, 5, 1, "", "__slots__"], [3, 3, 1, "", "__str__"], [3, 3, 1, "", "__sub__"], [3, 3, 1, "", "__truediv__"], [3, 3, 1, "", "abs"], [3, 3, 1, "", "add"], [3, 3, 1, "", "backward"], [3, 3, 1, "", "clip"], [3, 3, 1, "", "comm"], [3, 3, 1, "", "constant"], [3, 3, 1, "", "dirac"], [3, 3, 1, "", "div"], [3, 4, 1, "", "dtype"], [3, 3, 1, "", "elu"], [3, 3, 1, "", "empty"], [3, 3, 1, "", "exp"], [3, 3, 1, "", "gelu"], [3, 3, 1, "", "hardswish"], [3, 3, 1, "", "kaiming_normal"], [3, 3, 1, "", "kaiming_uniform"], [3, 3, 1, "", "leakyrelu"], [3, 3, 1, "", "log"], [3, 3, 1, "", "log_softmax"], [3, 3, 1, "", "matmul"], [3, 3, 1, "", "max"], [3, 3, 1, "", "mean"], [3, 3, 1, "", "min"], [3, 3, 1, "", "mish"], [3, 3, 1, "", "mul"], [3, 4, 1, "", "ndim"], [3, 3, 1, "", "no_grad"], [3, 3, 1, "", "normal"], [3, 3, 1, "", "ones"], [3, 3, 1, "", "orthogonal"], [3, 3, 1, "", "permute"], [3, 3, 1, "", "pow"], [3, 3, 1, "", "quick_gelu"], [3, 3, 1, "", "reciprocal"], [3, 3, 1, "", "relu"], [3, 3, 1, "", "relu6"], [3, 3, 1, "", "requires_grad_"], [3, 4, 1, "", "shape"], [3, 3, 1, "", "sigmoid"], [3, 3, 1, "", "sign"], [3, 3, 1, "", "silu"], [3, 4, 1, "", "size"], [3, 3, 1, "", "softmax"], [3, 3, 1, "", "softplus"], [3, 3, 1, "", "sparse"], [3, 3, 1, "", "sqrt"], [3, 3, 1, "", "square"], [3, 3, 1, "", "sub"], [3, 3, 1, "", "sum"], [3, 3, 1, "", "tanh"], [3, 3, 1, "", "transpose"], [3, 3, 1, "", "uniform"], [3, 3, 1, "", "xavier_normal"], [3, 3, 1, "", "xavier_uniform"], [3, 3, 1, "", "zeros"]], "giagrad.display": [[1, 6, 1, "", "draw_dot"], [2, 0, 0, "-", "prototype"]], "giagrad.display.prototype": [[2, 1, 1, "", "FONTSIZE"], [2, 6, 1, "", "draw_dot"], [2, 6, 1, "", "tensor2node"], [2, 6, 1, "", "trace"]], "giagrad.initializers": [[4, 6, 1, "", "_calculate_correct_fan"], [4, 6, 1, "", "_calculate_fan_in_and_fan_out"], [4, 6, 1, "", "calculate_gain"], [4, 6, 1, "", "dirac"], [4, 6, 1, "", "kaiming_normal"], [4, 6, 1, "", "kaiming_uniform"], [4, 6, 1, "", "normal"], [4, 6, 1, "", "orthogonal"], [4, 6, 1, "", "sparse"], [4, 6, 1, "", "uniform"], [4, 6, 1, "", "xavier_normal"], [4, 6, 1, "", "xavier_uniform"]], "giagrad.mathops": [[5, 2, 1, "", "Abs"], [5, 2, 1, "", "Add"], [5, 2, 1, "", "Div"], [5, 2, 1, "", "Exp"], [5, 2, 1, "", "Log"], [5, 2, 1, "", "Matmul"], [5, 2, 1, "", "Mul"], [5, 2, 1, "", "Pow"], [5, 2, 1, "", "Reciprocal"], [5, 2, 1, "", "Sub"], [5, 6, 1, "", "collapse"]], "giagrad.mathops.Abs": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Add": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Div": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Exp": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Log": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Matmul": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Mul": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Pow": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Reciprocal": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mathops.Sub": [[5, 3, 1, "", "__str__"], [5, 3, 1, "", "backward"], [5, 3, 1, "", "forward"]], "giagrad.mlops": [[6, 2, 1, "", "ELU"], [6, 2, 1, "", "GELU"], [6, 2, 1, "", "Hardswish"], [6, 2, 1, "", "LeakyReLU"], [6, 2, 1, "", "LogSoftmax"], [6, 2, 1, "", "ReLU"], [6, 2, 1, "", "ReLU6"], [6, 2, 1, "", "SiLU"], [6, 2, 1, "", "Sigmoid"], [6, 2, 1, "", "Softmax"], [6, 2, 1, "", "Softplus"], [6, 2, 1, "", "Tanh"]], "giagrad.mlops.ELU": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.GELU": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.Hardswish": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.LeakyReLU": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.LogSoftmax": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.ReLU": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.ReLU6": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.SiLU": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.Sigmoid": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.Softmax": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.Softplus": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.mlops.Tanh": [[6, 3, 1, "", "__str__"], [6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "giagrad.nn": [[7, 2, 1, "", "CrossEntropyLoss"], [7, 2, 1, "", "Dropout"], [7, 2, 1, "", "Dropout1d"], [7, 2, 1, "", "Dropout2d"], [7, 2, 1, "", "Dropout3d"], [7, 2, 1, "", "Linear"], [7, 2, 1, "", "Module"], [9, 0, 0, "-", "layers"], [12, 0, 0, "-", "loss"], [13, 0, 0, "-", "module"]], "giagrad.nn.CrossEntropyLoss": [[7, 3, 1, "", "__call__"]], "giagrad.nn.Dropout": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "__str__"]], "giagrad.nn.Dropout1d": [[7, 3, 1, "", "__check"]], "giagrad.nn.Dropout2d": [[7, 3, 1, "", "__check"]], "giagrad.nn.Dropout3d": [[7, 3, 1, "", "__check"]], "giagrad.nn.Linear": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "__str__"]], "giagrad.nn.Module": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__setattr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "apply"], [7, 3, 1, "", "eval"], [7, 3, 1, "", "parameters"], [7, 3, 1, "", "train"], [7, 3, 1, "", "zero_grad"]], "giagrad.nn.layers": [[9, 2, 1, "", "Dropout"], [9, 2, 1, "", "Dropout1d"], [9, 2, 1, "", "Dropout2d"], [9, 2, 1, "", "Dropout3d"], [9, 2, 1, "", "Linear"], [8, 0, 0, "-", "dropout"], [10, 0, 0, "-", "layers"]], "giagrad.nn.layers.Dropout": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "__str__"]], "giagrad.nn.layers.Dropout1d": [[9, 3, 1, "", "__check"]], "giagrad.nn.layers.Dropout2d": [[9, 3, 1, "", "__check"]], "giagrad.nn.layers.Dropout3d": [[9, 3, 1, "", "__check"]], "giagrad.nn.layers.Linear": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "__str__"]], "giagrad.nn.layers.dropout": [[8, 2, 1, "", "Dropout"], [8, 2, 1, "", "Dropout1d"], [8, 2, 1, "", "Dropout2d"], [8, 2, 1, "", "Dropout3d"], [8, 2, 1, "", "DropoutNd"], [8, 6, 1, "", "_random_dims_to_zero"]], "giagrad.nn.layers.dropout.Dropout": [[8, 3, 1, "", "__call__"], [8, 3, 1, "", "__str__"]], "giagrad.nn.layers.dropout.Dropout1d": [[8, 3, 1, "", "__check"]], "giagrad.nn.layers.dropout.Dropout2d": [[8, 3, 1, "", "__check"]], "giagrad.nn.layers.dropout.Dropout3d": [[8, 3, 1, "", "__check"]], "giagrad.nn.layers.dropout.DropoutNd": [[8, 3, 1, "", "__call__"], [8, 3, 1, "", "__check"]], "giagrad.nn.layers.layers": [[10, 2, 1, "", "Linear"]], "giagrad.nn.layers.layers.Linear": [[10, 3, 1, "", "__call__"], [10, 3, 1, "", "__str__"]], "giagrad.nn.loss": [[12, 2, 1, "", "CrossEntropyLoss"], [11, 0, 0, "-", "CrossEntropyLoss"]], "giagrad.nn.loss.CrossEntropyLoss": [[11, 2, 1, "", "CrossEntropy"], [11, 2, 1, "", "CrossEntropyLoss"], [12, 3, 1, "", "__call__"]], "giagrad.nn.loss.CrossEntropyLoss.CrossEntropy": [[11, 3, 1, "", "__str__"], [11, 3, 1, "", "backward"], [11, 3, 1, "", "forward"]], "giagrad.nn.loss.CrossEntropyLoss.CrossEntropyLoss": [[11, 3, 1, "", "__call__"]], "giagrad.nn.module": [[13, 2, 1, "", "Module"]], "giagrad.nn.module.Module": [[13, 3, 1, "", "__call__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setattr__"], [13, 3, 1, "", "__str__"], [13, 3, 1, "", "apply"], [13, 3, 1, "", "eval"], [13, 3, 1, "", "parameters"], [13, 3, 1, "", "train"], [13, 3, 1, "", "zero_grad"]], "giagrad.optim": [[15, 2, 1, "", "SGD"], [14, 0, 0, "-", "SGD"]], "giagrad.optim.SGD": [[14, 2, 1, "", "Optimizer"], [14, 2, 1, "", "SGD"], [15, 3, 1, "", "step"]], "giagrad.optim.SGD.Optimizer": [[14, 3, 1, "", "step"], [14, 3, 1, "", "zero_grad"]], "giagrad.optim.SGD.SGD": [[14, 3, 1, "", "step"]], "giagrad.reductionops": [[16, 2, 1, "", "Mean"], [16, 2, 1, "", "MinMax"], [16, 2, 1, "", "Sum"], [16, 6, 1, "", "expand"]], "giagrad.reductionops.Mean": [[16, 3, 1, "", "__constant"], [16, 3, 1, "", "__str__"], [16, 3, 1, "", "backward"], [16, 3, 1, "", "forward"]], "giagrad.reductionops.MinMax": [[16, 3, 1, "", "__str__"], [16, 3, 1, "", "backward"], [16, 3, 1, "", "forward"]], "giagrad.reductionops.Sum": [[16, 3, 1, "", "__str__"], [16, 3, 1, "", "backward"], [16, 3, 1, "", "forward"]], "giagrad.shapeops": [[17, 2, 1, "", "Permute"]], "giagrad.shapeops.Permute": [[17, 3, 1, "", "__str__"], [17, 3, 1, "", "backward"], [17, 3, 1, "", "forward"]], "giagrad.tensor": [[18, 2, 1, "", "Context"], [18, 2, 1, "", "Tensor"]], "giagrad.tensor.Context": [[18, 3, 1, "", "__str__"], [18, 3, 1, "", "backward"], [18, 3, 1, "", "forward"]], "giagrad.tensor.Tensor": [[18, 4, 1, "", "T"], [18, 3, 1, "", "__add__"], [18, 5, 1, "", "__array_ufunc__"], [18, 3, 1, "", "__iadd__"], [18, 3, 1, "", "__imatmul__"], [18, 3, 1, "", "__imul__"], [18, 3, 1, "", "__ipow__"], [18, 3, 1, "", "__isub__"], [18, 3, 1, "", "__itruediv__"], [18, 3, 1, "", "__matmul__"], [18, 3, 1, "", "__mul__"], [18, 3, 1, "", "__neg__"], [18, 3, 1, "", "__pow__"], [18, 3, 1, "", "__radd__"], [18, 3, 1, "", "__repr__"], [18, 3, 1, "", "__rmatmul__"], [18, 3, 1, "", "__rmul__"], [18, 3, 1, "", "__rpow__"], [18, 3, 1, "", "__rsub__"], [18, 3, 1, "", "__rtruediv__"], [18, 5, 1, "", "__slots__"], [18, 3, 1, "", "__str__"], [18, 3, 1, "", "__sub__"], [18, 3, 1, "", "__truediv__"], [18, 3, 1, "", "abs"], [18, 3, 1, "", "add"], [18, 3, 1, "", "backward"], [18, 3, 1, "", "clip"], [18, 3, 1, "", "comm"], [18, 3, 1, "", "constant"], [18, 3, 1, "", "dirac"], [18, 3, 1, "", "div"], [18, 4, 1, "", "dtype"], [18, 3, 1, "", "elu"], [18, 3, 1, "", "empty"], [18, 3, 1, "", "exp"], [18, 3, 1, "", "gelu"], [18, 3, 1, "", "hardswish"], [18, 3, 1, "", "kaiming_normal"], [18, 3, 1, "", "kaiming_uniform"], [18, 3, 1, "", "leakyrelu"], [18, 3, 1, "", "log"], [18, 3, 1, "", "log_softmax"], [18, 3, 1, "", "matmul"], [18, 3, 1, "", "max"], [18, 3, 1, "", "mean"], [18, 3, 1, "", "min"], [18, 3, 1, "", "mish"], [18, 3, 1, "", "mul"], [18, 4, 1, "", "ndim"], [18, 3, 1, "", "no_grad"], [18, 3, 1, "", "normal"], [18, 3, 1, "", "ones"], [18, 3, 1, "", "orthogonal"], [18, 3, 1, "", "permute"], [18, 3, 1, "", "pow"], [18, 3, 1, "", "quick_gelu"], [18, 3, 1, "", "reciprocal"], [18, 3, 1, "", "relu"], [18, 3, 1, "", "relu6"], [18, 3, 1, "", "requires_grad_"], [18, 4, 1, "", "shape"], [18, 3, 1, "", "sigmoid"], [18, 3, 1, "", "sign"], [18, 3, 1, "", "silu"], [18, 4, 1, "", "size"], [18, 3, 1, "", "softmax"], [18, 3, 1, "", "softplus"], [18, 3, 1, "", "sparse"], [18, 3, 1, "", "sqrt"], [18, 3, 1, "", "square"], [18, 3, 1, "", "sub"], [18, 3, 1, "", "sum"], [18, 3, 1, "", "tanh"], [18, 3, 1, "", "transpose"], [18, 3, 1, "", "uniform"], [18, 3, 1, "", "xavier_normal"], [18, 3, 1, "", "xavier_uniform"], [18, 3, 1, "", "zeros"]], "layers_loss": [[20, 1, 1, "", "FEATURES"], [20, 1, 1, "", "OBS"], [20, 6, 1, "", "test_loss"]], "tensor_intializers": [[21, 6, 1, "", "test_inits"]], "tensor_mloperations": [[22, 6, 1, "", "test_more_more_ops"], [22, 6, 1, "", "test_more_ops"], [22, 6, 1, "", "test_ops"]], "tensor_moperations": [[23, 6, 1, "", "test_more_ops"], [23, 6, 1, "", "test_more_reductions"], [23, 6, 1, "", "test_reductions"], [23, 6, 1, "", "test_sanity_check"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"conf": 0, "modul": [0, 2, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "giagrad": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24], "displai": [1, 2], "submodul": [1, 3, 7, 9, 12, 15], "packag": [1, 3, 7, 9, 12, 15], "function": [1, 2, 3, 4, 5, 8, 16, 20, 21, 22, 23], "prototyp": 2, "attribut": [2, 3, 5, 6, 11, 16, 17, 18, 20], "subpackag": [3, 7], "class": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "initi": 4, "mathop": 5, "mlop": 6, "nn": [7, 8, 9, 10, 11, 12, 13], "layer": [8, 9, 10], "dropout": 8, "loss": [11, 12], "crossentropyloss": 11, "optim": [14, 15], "sgd": 14, "reductionop": 16, "shapeop": 17, "tensor": 18, "api": 19, "refer": 19, "layers_loss": 20, "tensor_inti": 21, "tensor_mloper": 22, "tensor_moper": 23, "welcom": 24, "": 24, "document": 24, "indic": 24, "tabl": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"conf": [[0, "module-conf"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"]], "giagrad.display": [[1, "module-giagrad.display"]], "Submodules": [[1, "submodules"], [3, "submodules"], [7, "submodules"], [9, "submodules"], [12, "submodules"], [15, "submodules"]], "Package Contents": [[1, "package-contents"], [3, "package-contents"], [7, "package-contents"], [9, "package-contents"], [12, "package-contents"], [15, "package-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [8, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"]], "giagrad.display.prototype": [[2, "module-giagrad.display.prototype"]], "Attributes": [[2, "attributes"], [3, "attributes"], [5, "attributes"], [5, "id3"], [5, "id6"], [5, "id9"], [5, "id12"], [5, "id15"], [5, "id18"], [5, "id21"], [5, "id24"], [5, "id27"], [6, "attributes"], [6, "id3"], [6, "id6"], [6, "id9"], [6, "id12"], [6, "id15"], [6, "id18"], [6, "id21"], [6, "id24"], [6, "id27"], [6, "id30"], [11, "attributes"], [16, "attributes"], [16, "id3"], [16, "id6"], [17, "attributes"], [18, "attributes"], [18, "id3"], [20, "attributes"]], "giagrad": [[3, "module-giagrad"]], "Subpackages": [[3, "subpackages"], [7, "subpackages"]], "Classes": [[3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"]], "giagrad.initializers": [[4, "module-giagrad.initializers"]], "giagrad.mathops": [[5, "module-giagrad.mathops"]], "giagrad.mlops": [[6, "module-giagrad.mlops"]], "giagrad.nn": [[7, "module-giagrad.nn"]], "giagrad.nn.layers.dropout": [[8, "module-giagrad.nn.layers.dropout"]], "giagrad.nn.layers": [[9, "module-giagrad.nn.layers"]], "giagrad.nn.layers.layers": [[10, "module-giagrad.nn.layers.layers"]], "giagrad.nn.loss.CrossEntropyLoss": [[11, "module-giagrad.nn.loss.CrossEntropyLoss"]], "giagrad.nn.loss": [[12, "module-giagrad.nn.loss"]], "giagrad.nn.module": [[13, "module-giagrad.nn.module"]], "giagrad.optim.SGD": [[14, "module-giagrad.optim.SGD"]], "giagrad.optim": [[15, "module-giagrad.optim"]], "giagrad.reductionops": [[16, "module-giagrad.reductionops"]], "giagrad.shapeops": [[17, "module-giagrad.shapeops"]], "giagrad.tensor": [[18, "module-giagrad.tensor"]], "API Reference": [[19, "api-reference"]], "layers_loss": [[20, "module-layers_loss"]], "tensor_intializers": [[21, "module-tensor_intializers"]], "tensor_mloperations": [[22, "module-tensor_mloperations"]], "tensor_moperations": [[23, "module-tensor_moperations"]], "Welcome to giagrad\u2019s documentation!": [[24, "welcome-to-giagrad-s-documentation"]], "Contents:": [[24, null]], "Indices and tables": [[24, "indices-and-tables"]]}, "indexentries": {"author (in module conf)": [[0, "conf.author"]], "autoapi_dirs (in module conf)": [[0, "conf.autoapi_dirs"]], "autoapi_type (in module conf)": [[0, "conf.autoapi_type"]], "conf": [[0, "module-conf"]], "copyright (in module conf)": [[0, "conf.copyright"]], "exclude_patterns (in module conf)": [[0, "conf.exclude_patterns"]], "extensions (in module conf)": [[0, "conf.extensions"]], "html_static_path (in module conf)": [[0, "conf.html_static_path"]], "html_theme (in module conf)": [[0, "conf.html_theme"]], "module": [[0, "module-conf"], [1, "module-giagrad.display"], [2, "module-giagrad.display.prototype"], [3, "module-giagrad"], [4, "module-giagrad.initializers"], [5, "module-giagrad.mathops"], [6, "module-giagrad.mlops"], [7, "module-giagrad.nn"], [8, "module-giagrad.nn.layers.dropout"], [9, "module-giagrad.nn.layers"], [10, "module-giagrad.nn.layers.layers"], [11, "module-giagrad.nn.loss.CrossEntropyLoss"], [12, "module-giagrad.nn.loss"], [13, "module-giagrad.nn.module"], [14, "module-giagrad.optim.SGD"], [15, "module-giagrad.optim"], [16, "module-giagrad.reductionops"], [17, "module-giagrad.shapeops"], [18, "module-giagrad.tensor"], [20, "module-layers_loss"], [21, "module-tensor_intializers"], [22, "module-tensor_mloperations"], [23, "module-tensor_moperations"]], "project (in module conf)": [[0, "conf.project"]], "release (in module conf)": [[0, "conf.release"]], "templates_path (in module conf)": [[0, "conf.templates_path"]], "draw_dot() (in module giagrad.display)": [[1, "giagrad.display.draw_dot"]], "giagrad.display": [[1, "module-giagrad.display"]], "fontsize (in module giagrad.display.prototype)": [[2, "giagrad.display.prototype.FONTSIZE"]], "draw_dot() (in module giagrad.display.prototype)": [[2, "giagrad.display.prototype.draw_dot"]], "giagrad.display.prototype": [[2, "module-giagrad.display.prototype"]], "tensor2node() (in module giagrad.display.prototype)": [[2, "giagrad.display.prototype.tensor2node"]], "trace() (in module giagrad.display.prototype)": [[2, "giagrad.display.prototype.trace"]], "crossentropyloss (class in giagrad)": [[3, "giagrad.CrossEntropyLoss"]], "dropout (class in giagrad)": [[3, "giagrad.Dropout"]], "dropout1d (class in giagrad)": [[3, "giagrad.Dropout1d"]], "dropout2d (class in giagrad)": [[3, "giagrad.Dropout2d"]], "dropout3d (class in giagrad)": [[3, "giagrad.Dropout3d"]], "linear (class in giagrad)": [[3, "giagrad.Linear"]], "module (class in giagrad)": [[3, "giagrad.Module"]], "t (giagrad.tensor property)": [[3, "giagrad.Tensor.T"]], "tensor (class in giagrad)": [[3, "giagrad.Tensor"]], "__add__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__add__"]], "__array_ufunc__ (giagrad.tensor attribute)": [[3, "giagrad.Tensor.__array_ufunc__"]], "__call__() (giagrad.crossentropyloss method)": [[3, "giagrad.CrossEntropyLoss.__call__"]], "__call__() (giagrad.dropout method)": [[3, "giagrad.Dropout.__call__"]], "__call__() (giagrad.linear method)": [[3, "giagrad.Linear.__call__"]], "__call__() (giagrad.module method)": [[3, "giagrad.Module.__call__"]], "__check() (giagrad.dropout1d method)": [[3, "giagrad.Dropout1d.__check"]], "__check() (giagrad.dropout2d method)": [[3, "giagrad.Dropout2d.__check"]], "__check() (giagrad.dropout3d method)": [[3, "giagrad.Dropout3d.__check"]], "__iadd__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__iadd__"]], "__imatmul__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__imatmul__"]], "__imul__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__imul__"]], "__ipow__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__ipow__"]], "__isub__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__isub__"]], "__itruediv__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__itruediv__"]], "__matmul__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__matmul__"]], "__mul__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__mul__"]], "__neg__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__neg__"]], "__pow__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__pow__"]], "__radd__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__radd__"]], "__repr__() (giagrad.module method)": [[3, "giagrad.Module.__repr__"]], "__repr__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__repr__"]], "__rmatmul__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__rmatmul__"]], "__rmul__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__rmul__"]], "__rpow__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__rpow__"]], "__rsub__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__rsub__"]], "__rtruediv__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__rtruediv__"]], "__setattr__() (giagrad.module method)": [[3, "giagrad.Module.__setattr__"]], "__slots__ (giagrad.tensor attribute)": [[3, "giagrad.Tensor.__slots__"]], "__str__() (giagrad.dropout method)": [[3, "giagrad.Dropout.__str__"]], "__str__() (giagrad.linear method)": [[3, "giagrad.Linear.__str__"]], "__str__() (giagrad.module method)": [[3, "giagrad.Module.__str__"]], "__str__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__str__"]], "__sub__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__sub__"]], "__truediv__() (giagrad.tensor method)": [[3, "giagrad.Tensor.__truediv__"]], "abs() (giagrad.tensor method)": [[3, "giagrad.Tensor.abs"]], "add() (giagrad.tensor method)": [[3, "giagrad.Tensor.add"]], "apply() (giagrad.module method)": [[3, "giagrad.Module.apply"]], "backward() (giagrad.tensor method)": [[3, "giagrad.Tensor.backward"]], "calculate_gain() (in module giagrad)": [[3, "giagrad.calculate_gain"]], "clip() (giagrad.tensor method)": [[3, "giagrad.Tensor.clip"]], "comm() (giagrad.tensor class method)": [[3, "giagrad.Tensor.comm"]], "constant() (giagrad.tensor method)": [[3, "giagrad.Tensor.constant"]], "dirac() (giagrad.tensor method)": [[3, "giagrad.Tensor.dirac"]], "div() (giagrad.tensor method)": [[3, "giagrad.Tensor.div"]], "dtype (giagrad.tensor property)": [[3, "giagrad.Tensor.dtype"]], "elu() (giagrad.tensor method)": [[3, "giagrad.Tensor.elu"]], "empty() (giagrad.tensor class method)": [[3, "giagrad.Tensor.empty"]], "eval() (giagrad.module method)": [[3, "giagrad.Module.eval"]], "exp() (giagrad.tensor method)": [[3, "giagrad.Tensor.exp"]], "gelu() (giagrad.tensor method)": [[3, "giagrad.Tensor.gelu"]], "giagrad": [[3, "module-giagrad"]], "hardswish() (giagrad.tensor method)": [[3, "giagrad.Tensor.hardswish"]], "kaiming_normal() (giagrad.tensor method)": [[3, "giagrad.Tensor.kaiming_normal"]], "kaiming_uniform() (giagrad.tensor method)": [[3, "giagrad.Tensor.kaiming_uniform"]], "leakyrelu() (giagrad.tensor method)": [[3, "giagrad.Tensor.leakyrelu"]], "log() (giagrad.tensor method)": [[3, "giagrad.Tensor.log"]], "log_softmax() (giagrad.tensor method)": [[3, "giagrad.Tensor.log_softmax"]], "matmul() (giagrad.tensor method)": [[3, "giagrad.Tensor.matmul"]], "max() (giagrad.tensor method)": [[3, "giagrad.Tensor.max"]], "mean() (giagrad.tensor method)": [[3, "giagrad.Tensor.mean"]], "min() (giagrad.tensor method)": [[3, "giagrad.Tensor.min"]], "mish() (giagrad.tensor method)": [[3, "giagrad.Tensor.mish"]], "mul() (giagrad.tensor method)": [[3, "giagrad.Tensor.mul"]], "ndim (giagrad.tensor property)": [[3, "giagrad.Tensor.ndim"]], "no_grad() (giagrad.tensor method)": [[3, "giagrad.Tensor.no_grad"]], "normal() (giagrad.tensor method)": [[3, "giagrad.Tensor.normal"]], "ones() (giagrad.tensor method)": [[3, "giagrad.Tensor.ones"]], "orthogonal() (giagrad.tensor method)": [[3, "giagrad.Tensor.orthogonal"]], "parameters() (giagrad.module method)": [[3, "giagrad.Module.parameters"]], "permute() (giagrad.tensor method)": [[3, "giagrad.Tensor.permute"]], "pow() (giagrad.tensor method)": [[3, "giagrad.Tensor.pow"]], "quick_gelu() (giagrad.tensor method)": [[3, "giagrad.Tensor.quick_gelu"]], "reciprocal() (giagrad.tensor method)": [[3, "giagrad.Tensor.reciprocal"]], "relu() (giagrad.tensor method)": [[3, "giagrad.Tensor.relu"]], "relu6() (giagrad.tensor method)": [[3, "giagrad.Tensor.relu6"]], "requires_grad_() (giagrad.tensor method)": [[3, "giagrad.Tensor.requires_grad_"]], "shape (giagrad.tensor property)": [[3, "giagrad.Tensor.shape"]], "sigmoid() (giagrad.tensor method)": [[3, "giagrad.Tensor.sigmoid"]], "sign() (giagrad.tensor method)": [[3, "giagrad.Tensor.sign"]], "silu() (giagrad.tensor method)": [[3, "giagrad.Tensor.silu"]], "size (giagrad.tensor property)": [[3, "giagrad.Tensor.size"]], "softmax() (giagrad.tensor method)": [[3, "giagrad.Tensor.softmax"]], "softplus() (giagrad.tensor method)": [[3, "giagrad.Tensor.softplus"]], "sparse() (giagrad.tensor method)": [[3, "giagrad.Tensor.sparse"]], "sqrt() (giagrad.tensor method)": [[3, "giagrad.Tensor.sqrt"]], "square() (giagrad.tensor method)": [[3, "giagrad.Tensor.square"]], "sub() (giagrad.tensor method)": [[3, "giagrad.Tensor.sub"]], "sum() (giagrad.tensor method)": [[3, "giagrad.Tensor.sum"]], "tanh() (giagrad.tensor method)": [[3, "giagrad.Tensor.tanh"]], "train() (giagrad.module method)": [[3, "giagrad.Module.train"]], "transpose() (giagrad.tensor method)": [[3, "giagrad.Tensor.transpose"]], "uniform() (giagrad.tensor method)": [[3, "giagrad.Tensor.uniform"]], "xavier_normal() (giagrad.tensor method)": [[3, "giagrad.Tensor.xavier_normal"]], "xavier_uniform() (giagrad.tensor method)": [[3, "giagrad.Tensor.xavier_uniform"]], "zero_grad() (giagrad.module method)": [[3, "giagrad.Module.zero_grad"]], "zeros() (giagrad.tensor method)": [[3, "giagrad.Tensor.zeros"]], "_calculate_correct_fan() (in module giagrad.initializers)": [[4, "giagrad.initializers._calculate_correct_fan"]], "_calculate_fan_in_and_fan_out() (in module giagrad.initializers)": [[4, "giagrad.initializers._calculate_fan_in_and_fan_out"]], "calculate_gain() (in module giagrad.initializers)": [[4, "giagrad.initializers.calculate_gain"]], "dirac() (in module giagrad.initializers)": [[4, "giagrad.initializers.dirac"]], "giagrad.initializers": [[4, "module-giagrad.initializers"]], "kaiming_normal() (in module giagrad.initializers)": [[4, "giagrad.initializers.kaiming_normal"]], "kaiming_uniform() (in module giagrad.initializers)": [[4, "giagrad.initializers.kaiming_uniform"]], "normal() (in module giagrad.initializers)": [[4, "giagrad.initializers.normal"]], "orthogonal() (in module giagrad.initializers)": [[4, "giagrad.initializers.orthogonal"]], "sparse() (in module giagrad.initializers)": [[4, "giagrad.initializers.sparse"]], "uniform() (in module giagrad.initializers)": [[4, "giagrad.initializers.uniform"]], "xavier_normal() (in module giagrad.initializers)": [[4, "giagrad.initializers.xavier_normal"]], "xavier_uniform() (in module giagrad.initializers)": [[4, "giagrad.initializers.xavier_uniform"]], "abs (class in giagrad.mathops)": [[5, "giagrad.mathops.Abs"]], "add (class in giagrad.mathops)": [[5, "giagrad.mathops.Add"]], "div (class in giagrad.mathops)": [[5, "giagrad.mathops.Div"]], "exp (class in giagrad.mathops)": [[5, "giagrad.mathops.Exp"]], "log (class in giagrad.mathops)": [[5, "giagrad.mathops.Log"]], "matmul (class in giagrad.mathops)": [[5, "giagrad.mathops.Matmul"]], "mul (class in giagrad.mathops)": [[5, "giagrad.mathops.Mul"]], "pow (class in giagrad.mathops)": [[5, "giagrad.mathops.Pow"]], "reciprocal (class in giagrad.mathops)": [[5, "giagrad.mathops.Reciprocal"]], "sub (class in giagrad.mathops)": [[5, "giagrad.mathops.Sub"]], "__str__() (giagrad.mathops.abs method)": [[5, "giagrad.mathops.Abs.__str__"]], "__str__() (giagrad.mathops.add method)": [[5, "giagrad.mathops.Add.__str__"]], "__str__() (giagrad.mathops.div method)": [[5, "giagrad.mathops.Div.__str__"]], "__str__() (giagrad.mathops.exp method)": [[5, "giagrad.mathops.Exp.__str__"]], "__str__() (giagrad.mathops.log method)": [[5, "giagrad.mathops.Log.__str__"]], "__str__() (giagrad.mathops.matmul method)": [[5, "giagrad.mathops.Matmul.__str__"]], "__str__() (giagrad.mathops.mul method)": [[5, "giagrad.mathops.Mul.__str__"]], "__str__() (giagrad.mathops.pow method)": [[5, "giagrad.mathops.Pow.__str__"]], "__str__() (giagrad.mathops.reciprocal method)": [[5, "giagrad.mathops.Reciprocal.__str__"]], "__str__() (giagrad.mathops.sub method)": [[5, "giagrad.mathops.Sub.__str__"]], "backward() (giagrad.mathops.abs method)": [[5, "giagrad.mathops.Abs.backward"]], "backward() (giagrad.mathops.add method)": [[5, "giagrad.mathops.Add.backward"]], "backward() (giagrad.mathops.div method)": [[5, "giagrad.mathops.Div.backward"]], "backward() (giagrad.mathops.exp method)": [[5, "giagrad.mathops.Exp.backward"]], "backward() (giagrad.mathops.log method)": [[5, "giagrad.mathops.Log.backward"]], "backward() (giagrad.mathops.matmul method)": [[5, "giagrad.mathops.Matmul.backward"]], "backward() (giagrad.mathops.mul method)": [[5, "giagrad.mathops.Mul.backward"]], "backward() (giagrad.mathops.pow method)": [[5, "giagrad.mathops.Pow.backward"]], "backward() (giagrad.mathops.reciprocal method)": [[5, "giagrad.mathops.Reciprocal.backward"]], "backward() (giagrad.mathops.sub method)": [[5, "giagrad.mathops.Sub.backward"]], "collapse() (in module giagrad.mathops)": [[5, "giagrad.mathops.collapse"]], "forward() (giagrad.mathops.abs class method)": [[5, "giagrad.mathops.Abs.forward"]], "forward() (giagrad.mathops.add class method)": [[5, "giagrad.mathops.Add.forward"]], "forward() (giagrad.mathops.div class method)": [[5, "giagrad.mathops.Div.forward"]], "forward() (giagrad.mathops.exp class method)": [[5, "giagrad.mathops.Exp.forward"]], "forward() (giagrad.mathops.log class method)": [[5, "giagrad.mathops.Log.forward"]], "forward() (giagrad.mathops.matmul class method)": [[5, "giagrad.mathops.Matmul.forward"]], "forward() (giagrad.mathops.mul class method)": [[5, "giagrad.mathops.Mul.forward"]], "forward() (giagrad.mathops.pow class method)": [[5, "giagrad.mathops.Pow.forward"]], "forward() (giagrad.mathops.reciprocal class method)": [[5, "giagrad.mathops.Reciprocal.forward"]], "forward() (giagrad.mathops.sub class method)": [[5, "giagrad.mathops.Sub.forward"]], "giagrad.mathops": [[5, "module-giagrad.mathops"]], "elu (class in giagrad.mlops)": [[6, "giagrad.mlops.ELU"]], "gelu (class in giagrad.mlops)": [[6, "giagrad.mlops.GELU"]], "hardswish (class in giagrad.mlops)": [[6, "giagrad.mlops.Hardswish"]], "leakyrelu (class in giagrad.mlops)": [[6, "giagrad.mlops.LeakyReLU"]], "logsoftmax (class in giagrad.mlops)": [[6, "giagrad.mlops.LogSoftmax"]], "relu (class in giagrad.mlops)": [[6, "giagrad.mlops.ReLU"]], "relu6 (class in giagrad.mlops)": [[6, "giagrad.mlops.ReLU6"]], "silu (class in giagrad.mlops)": [[6, "giagrad.mlops.SiLU"]], "sigmoid (class in giagrad.mlops)": [[6, "giagrad.mlops.Sigmoid"]], "softmax (class in giagrad.mlops)": [[6, "giagrad.mlops.Softmax"]], "softplus (class in giagrad.mlops)": [[6, "giagrad.mlops.Softplus"]], "tanh (class in giagrad.mlops)": [[6, "giagrad.mlops.Tanh"]], "__str__() (giagrad.mlops.elu method)": [[6, "giagrad.mlops.ELU.__str__"]], "__str__() (giagrad.mlops.gelu method)": [[6, "giagrad.mlops.GELU.__str__"]], "__str__() (giagrad.mlops.hardswish method)": [[6, "giagrad.mlops.Hardswish.__str__"]], "__str__() (giagrad.mlops.leakyrelu method)": [[6, "giagrad.mlops.LeakyReLU.__str__"]], "__str__() (giagrad.mlops.logsoftmax method)": [[6, "giagrad.mlops.LogSoftmax.__str__"]], "__str__() (giagrad.mlops.relu method)": [[6, "giagrad.mlops.ReLU.__str__"]], "__str__() (giagrad.mlops.relu6 method)": [[6, "giagrad.mlops.ReLU6.__str__"]], "__str__() (giagrad.mlops.silu method)": [[6, "giagrad.mlops.SiLU.__str__"]], "__str__() (giagrad.mlops.sigmoid method)": [[6, "giagrad.mlops.Sigmoid.__str__"]], "__str__() (giagrad.mlops.softmax method)": [[6, "giagrad.mlops.Softmax.__str__"]], "__str__() (giagrad.mlops.softplus method)": [[6, "giagrad.mlops.Softplus.__str__"]], "__str__() (giagrad.mlops.tanh method)": [[6, "giagrad.mlops.Tanh.__str__"]], "backward() (giagrad.mlops.elu method)": [[6, "giagrad.mlops.ELU.backward"]], "backward() (giagrad.mlops.gelu method)": [[6, "giagrad.mlops.GELU.backward"]], "backward() (giagrad.mlops.hardswish method)": [[6, "giagrad.mlops.Hardswish.backward"]], "backward() (giagrad.mlops.leakyrelu method)": [[6, "giagrad.mlops.LeakyReLU.backward"]], "backward() (giagrad.mlops.logsoftmax method)": [[6, "giagrad.mlops.LogSoftmax.backward"]], "backward() (giagrad.mlops.relu method)": [[6, "giagrad.mlops.ReLU.backward"]], "backward() (giagrad.mlops.relu6 method)": [[6, "giagrad.mlops.ReLU6.backward"]], "backward() (giagrad.mlops.silu method)": [[6, "giagrad.mlops.SiLU.backward"]], "backward() (giagrad.mlops.sigmoid method)": [[6, "giagrad.mlops.Sigmoid.backward"]], "backward() (giagrad.mlops.softmax method)": [[6, "giagrad.mlops.Softmax.backward"]], "backward() (giagrad.mlops.softplus method)": [[6, "giagrad.mlops.Softplus.backward"]], "backward() (giagrad.mlops.tanh method)": [[6, "giagrad.mlops.Tanh.backward"]], "forward() (giagrad.mlops.elu class method)": [[6, "giagrad.mlops.ELU.forward"]], "forward() (giagrad.mlops.gelu class method)": [[6, "giagrad.mlops.GELU.forward"]], "forward() (giagrad.mlops.hardswish class method)": [[6, "giagrad.mlops.Hardswish.forward"]], "forward() (giagrad.mlops.leakyrelu class method)": [[6, "giagrad.mlops.LeakyReLU.forward"]], "forward() (giagrad.mlops.logsoftmax class method)": [[6, "giagrad.mlops.LogSoftmax.forward"]], "forward() (giagrad.mlops.relu class method)": [[6, "giagrad.mlops.ReLU.forward"]], "forward() (giagrad.mlops.relu6 class method)": [[6, "giagrad.mlops.ReLU6.forward"]], "forward() (giagrad.mlops.silu class method)": [[6, "giagrad.mlops.SiLU.forward"]], "forward() (giagrad.mlops.sigmoid class method)": [[6, "giagrad.mlops.Sigmoid.forward"]], "forward() (giagrad.mlops.softmax class method)": [[6, "giagrad.mlops.Softmax.forward"]], "forward() (giagrad.mlops.softplus class method)": [[6, "giagrad.mlops.Softplus.forward"]], "forward() (giagrad.mlops.tanh class method)": [[6, "giagrad.mlops.Tanh.forward"]], "giagrad.mlops": [[6, "module-giagrad.mlops"]], "crossentropyloss (class in giagrad.nn)": [[7, "giagrad.nn.CrossEntropyLoss"]], "dropout (class in giagrad.nn)": [[7, "giagrad.nn.Dropout"]], "dropout1d (class in giagrad.nn)": [[7, "giagrad.nn.Dropout1d"]], "dropout2d (class in giagrad.nn)": [[7, "giagrad.nn.Dropout2d"]], "dropout3d (class in giagrad.nn)": [[7, "giagrad.nn.Dropout3d"]], "linear (class in giagrad.nn)": [[7, "giagrad.nn.Linear"]], "module (class in giagrad.nn)": [[7, "giagrad.nn.Module"]], "__call__() (giagrad.nn.crossentropyloss method)": [[7, "giagrad.nn.CrossEntropyLoss.__call__"]], "__call__() (giagrad.nn.dropout method)": [[7, "giagrad.nn.Dropout.__call__"]], "__call__() (giagrad.nn.linear method)": [[7, "giagrad.nn.Linear.__call__"]], "__call__() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.__call__"]], "__check() (giagrad.nn.dropout1d method)": [[7, "giagrad.nn.Dropout1d.__check"]], "__check() (giagrad.nn.dropout2d method)": [[7, "giagrad.nn.Dropout2d.__check"]], "__check() (giagrad.nn.dropout3d method)": [[7, "giagrad.nn.Dropout3d.__check"]], "__repr__() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.__repr__"]], "__setattr__() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.__setattr__"]], "__str__() (giagrad.nn.dropout method)": [[7, "giagrad.nn.Dropout.__str__"]], "__str__() (giagrad.nn.linear method)": [[7, "giagrad.nn.Linear.__str__"]], "__str__() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.__str__"]], "apply() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.apply"]], "eval() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.eval"]], "giagrad.nn": [[7, "module-giagrad.nn"]], "parameters() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.parameters"]], "train() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.train"]], "zero_grad() (giagrad.nn.module method)": [[7, "giagrad.nn.Module.zero_grad"]], "dropout (class in giagrad.nn.layers.dropout)": [[8, "giagrad.nn.layers.dropout.Dropout"]], "dropout1d (class in giagrad.nn.layers.dropout)": [[8, "giagrad.nn.layers.dropout.Dropout1d"]], "dropout2d (class in giagrad.nn.layers.dropout)": [[8, "giagrad.nn.layers.dropout.Dropout2d"]], "dropout3d (class in giagrad.nn.layers.dropout)": [[8, "giagrad.nn.layers.dropout.Dropout3d"]], "dropoutnd (class in giagrad.nn.layers.dropout)": [[8, "giagrad.nn.layers.dropout.DropoutNd"]], "__call__() (giagrad.nn.layers.dropout.dropout method)": [[8, "giagrad.nn.layers.dropout.Dropout.__call__"]], "__call__() (giagrad.nn.layers.dropout.dropoutnd method)": [[8, "giagrad.nn.layers.dropout.DropoutNd.__call__"]], "__check() (giagrad.nn.layers.dropout.dropout1d method)": [[8, "giagrad.nn.layers.dropout.Dropout1d.__check"]], "__check() (giagrad.nn.layers.dropout.dropout2d method)": [[8, "giagrad.nn.layers.dropout.Dropout2d.__check"]], "__check() (giagrad.nn.layers.dropout.dropout3d method)": [[8, "giagrad.nn.layers.dropout.Dropout3d.__check"]], "__check() (giagrad.nn.layers.dropout.dropoutnd method)": [[8, "giagrad.nn.layers.dropout.DropoutNd.__check"]], "__str__() (giagrad.nn.layers.dropout.dropout method)": [[8, "giagrad.nn.layers.dropout.Dropout.__str__"]], "_random_dims_to_zero() (in module giagrad.nn.layers.dropout)": [[8, "giagrad.nn.layers.dropout._random_dims_to_zero"]], "giagrad.nn.layers.dropout": [[8, "module-giagrad.nn.layers.dropout"]], "dropout (class in giagrad.nn.layers)": [[9, "giagrad.nn.layers.Dropout"]], "dropout1d (class in giagrad.nn.layers)": [[9, "giagrad.nn.layers.Dropout1d"]], "dropout2d (class in giagrad.nn.layers)": [[9, "giagrad.nn.layers.Dropout2d"]], "dropout3d (class in giagrad.nn.layers)": [[9, "giagrad.nn.layers.Dropout3d"]], "linear (class in giagrad.nn.layers)": [[9, "giagrad.nn.layers.Linear"]], "__call__() (giagrad.nn.layers.dropout method)": [[9, "giagrad.nn.layers.Dropout.__call__"]], "__call__() (giagrad.nn.layers.linear method)": [[9, "giagrad.nn.layers.Linear.__call__"]], "__check() (giagrad.nn.layers.dropout1d method)": [[9, "giagrad.nn.layers.Dropout1d.__check"]], "__check() (giagrad.nn.layers.dropout2d method)": [[9, "giagrad.nn.layers.Dropout2d.__check"]], "__check() (giagrad.nn.layers.dropout3d method)": [[9, "giagrad.nn.layers.Dropout3d.__check"]], "__str__() (giagrad.nn.layers.dropout method)": [[9, "giagrad.nn.layers.Dropout.__str__"]], "__str__() (giagrad.nn.layers.linear method)": [[9, "giagrad.nn.layers.Linear.__str__"]], "giagrad.nn.layers": [[9, "module-giagrad.nn.layers"]], "linear (class in giagrad.nn.layers.layers)": [[10, "giagrad.nn.layers.layers.Linear"]], "__call__() (giagrad.nn.layers.layers.linear method)": [[10, "giagrad.nn.layers.layers.Linear.__call__"]], "__str__() (giagrad.nn.layers.layers.linear method)": [[10, "giagrad.nn.layers.layers.Linear.__str__"]], "giagrad.nn.layers.layers": [[10, "module-giagrad.nn.layers.layers"]], "crossentropy (class in giagrad.nn.loss.crossentropyloss)": [[11, "giagrad.nn.loss.CrossEntropyLoss.CrossEntropy"]], "crossentropyloss (class in giagrad.nn.loss.crossentropyloss)": [[11, "giagrad.nn.loss.CrossEntropyLoss.CrossEntropyLoss"]], "__call__() (giagrad.nn.loss.crossentropyloss.crossentropyloss method)": [[11, "giagrad.nn.loss.CrossEntropyLoss.CrossEntropyLoss.__call__"]], "__str__() (giagrad.nn.loss.crossentropyloss.crossentropy method)": [[11, "giagrad.nn.loss.CrossEntropyLoss.CrossEntropy.__str__"]], "backward() (giagrad.nn.loss.crossentropyloss.crossentropy method)": [[11, "giagrad.nn.loss.CrossEntropyLoss.CrossEntropy.backward"]], "forward() (giagrad.nn.loss.crossentropyloss.crossentropy class method)": [[11, "giagrad.nn.loss.CrossEntropyLoss.CrossEntropy.forward"]], "giagrad.nn.loss.crossentropyloss": [[11, "module-giagrad.nn.loss.CrossEntropyLoss"]], "crossentropyloss (class in giagrad.nn.loss)": [[12, "giagrad.nn.loss.CrossEntropyLoss"]], "__call__() (giagrad.nn.loss.crossentropyloss method)": [[12, "giagrad.nn.loss.CrossEntropyLoss.__call__"]], "giagrad.nn.loss": [[12, "module-giagrad.nn.loss"]], "module (class in giagrad.nn.module)": [[13, "giagrad.nn.module.Module"]], "__call__() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.__call__"]], "__repr__() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.__repr__"]], "__setattr__() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.__setattr__"]], "__str__() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.__str__"]], "apply() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.apply"]], "eval() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.eval"]], "giagrad.nn.module": [[13, "module-giagrad.nn.module"]], "parameters() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.parameters"]], "train() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.train"]], "zero_grad() (giagrad.nn.module.module method)": [[13, "giagrad.nn.module.Module.zero_grad"]], "optimizer (class in giagrad.optim.sgd)": [[14, "giagrad.optim.SGD.Optimizer"]], "sgd (class in giagrad.optim.sgd)": [[14, "giagrad.optim.SGD.SGD"]], "giagrad.optim.sgd": [[14, "module-giagrad.optim.SGD"]], "step() (giagrad.optim.sgd.optimizer method)": [[14, "giagrad.optim.SGD.Optimizer.step"]], "step() (giagrad.optim.sgd.sgd method)": [[14, "giagrad.optim.SGD.SGD.step"]], "zero_grad() (giagrad.optim.sgd.optimizer method)": [[14, "giagrad.optim.SGD.Optimizer.zero_grad"]], "sgd (class in giagrad.optim)": [[15, "giagrad.optim.SGD"]], "giagrad.optim": [[15, "module-giagrad.optim"]], "step() (giagrad.optim.sgd method)": [[15, "giagrad.optim.SGD.step"]], "mean (class in giagrad.reductionops)": [[16, "giagrad.reductionops.Mean"]], "minmax (class in giagrad.reductionops)": [[16, "giagrad.reductionops.MinMax"]], "sum (class in giagrad.reductionops)": [[16, "giagrad.reductionops.Sum"]], "__constant() (giagrad.reductionops.mean method)": [[16, "giagrad.reductionops.Mean.__constant"]], "__str__() (giagrad.reductionops.mean method)": [[16, "giagrad.reductionops.Mean.__str__"]], "__str__() (giagrad.reductionops.minmax method)": [[16, "giagrad.reductionops.MinMax.__str__"]], "__str__() (giagrad.reductionops.sum method)": [[16, "giagrad.reductionops.Sum.__str__"]], "backward() (giagrad.reductionops.mean method)": [[16, "giagrad.reductionops.Mean.backward"]], "backward() (giagrad.reductionops.minmax method)": [[16, "giagrad.reductionops.MinMax.backward"]], "backward() (giagrad.reductionops.sum method)": [[16, "giagrad.reductionops.Sum.backward"]], "expand() (in module giagrad.reductionops)": [[16, "giagrad.reductionops.expand"]], "forward() (giagrad.reductionops.mean class method)": [[16, "giagrad.reductionops.Mean.forward"]], "forward() (giagrad.reductionops.minmax class method)": [[16, "giagrad.reductionops.MinMax.forward"]], "forward() (giagrad.reductionops.sum class method)": [[16, "giagrad.reductionops.Sum.forward"]], "giagrad.reductionops": [[16, "module-giagrad.reductionops"]], "permute (class in giagrad.shapeops)": [[17, "giagrad.shapeops.Permute"]], "__str__() (giagrad.shapeops.permute method)": [[17, "giagrad.shapeops.Permute.__str__"]], "backward() (giagrad.shapeops.permute method)": [[17, "giagrad.shapeops.Permute.backward"]], "forward() (giagrad.shapeops.permute class method)": [[17, "giagrad.shapeops.Permute.forward"]], "giagrad.shapeops": [[17, "module-giagrad.shapeops"]], "context (class in giagrad.tensor)": [[18, "giagrad.tensor.Context"]], "t (giagrad.tensor.tensor property)": [[18, "giagrad.tensor.Tensor.T"]], "tensor (class in giagrad.tensor)": [[18, "giagrad.tensor.Tensor"]], "__add__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__add__"]], "__array_ufunc__ (giagrad.tensor.tensor attribute)": [[18, "giagrad.tensor.Tensor.__array_ufunc__"]], "__iadd__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__iadd__"]], "__imatmul__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__imatmul__"]], "__imul__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__imul__"]], "__ipow__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__ipow__"]], "__isub__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__isub__"]], "__itruediv__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__itruediv__"]], "__matmul__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__matmul__"]], "__mul__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__mul__"]], "__neg__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__neg__"]], "__pow__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__pow__"]], "__radd__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__radd__"]], "__repr__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__repr__"]], "__rmatmul__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__rmatmul__"]], "__rmul__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__rmul__"]], "__rpow__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__rpow__"]], "__rsub__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__rsub__"]], "__rtruediv__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__rtruediv__"]], "__slots__ (giagrad.tensor.tensor attribute)": [[18, "giagrad.tensor.Tensor.__slots__"]], "__str__() (giagrad.tensor.context method)": [[18, "giagrad.tensor.Context.__str__"]], "__str__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__str__"]], "__sub__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__sub__"]], "__truediv__() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.__truediv__"]], "abs() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.abs"]], "add() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.add"]], "backward() (giagrad.tensor.context method)": [[18, "giagrad.tensor.Context.backward"]], "backward() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.backward"]], "clip() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.clip"]], "comm() (giagrad.tensor.tensor class method)": [[18, "giagrad.tensor.Tensor.comm"]], "constant() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.constant"]], "dirac() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.dirac"]], "div() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.div"]], "dtype (giagrad.tensor.tensor property)": [[18, "giagrad.tensor.Tensor.dtype"]], "elu() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.elu"]], "empty() (giagrad.tensor.tensor class method)": [[18, "giagrad.tensor.Tensor.empty"]], "exp() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.exp"]], "forward() (giagrad.tensor.context class method)": [[18, "giagrad.tensor.Context.forward"]], "gelu() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.gelu"]], "giagrad.tensor": [[18, "module-giagrad.tensor"]], "hardswish() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.hardswish"]], "kaiming_normal() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.kaiming_normal"]], "kaiming_uniform() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.kaiming_uniform"]], "leakyrelu() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.leakyrelu"]], "log() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.log"]], "log_softmax() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.log_softmax"]], "matmul() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.matmul"]], "max() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.max"]], "mean() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.mean"]], "min() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.min"]], "mish() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.mish"]], "mul() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.mul"]], "ndim (giagrad.tensor.tensor property)": [[18, "giagrad.tensor.Tensor.ndim"]], "no_grad() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.no_grad"]], "normal() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.normal"]], "ones() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.ones"]], "orthogonal() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.orthogonal"]], "permute() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.permute"]], "pow() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.pow"]], "quick_gelu() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.quick_gelu"]], "reciprocal() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.reciprocal"]], "relu() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.relu"]], "relu6() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.relu6"]], "requires_grad_() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.requires_grad_"]], "shape (giagrad.tensor.tensor property)": [[18, "giagrad.tensor.Tensor.shape"]], "sigmoid() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.sigmoid"]], "sign() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.sign"]], "silu() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.silu"]], "size (giagrad.tensor.tensor property)": [[18, "giagrad.tensor.Tensor.size"]], "softmax() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.softmax"]], "softplus() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.softplus"]], "sparse() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.sparse"]], "sqrt() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.sqrt"]], "square() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.square"]], "sub() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.sub"]], "sum() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.sum"]], "tanh() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.tanh"]], "transpose() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.transpose"]], "uniform() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.uniform"]], "xavier_normal() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.xavier_normal"]], "xavier_uniform() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.xavier_uniform"]], "zeros() (giagrad.tensor.tensor method)": [[18, "giagrad.tensor.Tensor.zeros"]], "features (in module layers_loss)": [[20, "layers_loss.FEATURES"]], "obs (in module layers_loss)": [[20, "layers_loss.OBS"]], "layers_loss": [[20, "module-layers_loss"]], "test_loss() (in module layers_loss)": [[20, "layers_loss.test_loss"]], "tensor_intializers": [[21, "module-tensor_intializers"]], "test_inits() (in module tensor_intializers)": [[21, "tensor_intializers.test_inits"]], "tensor_mloperations": [[22, "module-tensor_mloperations"]], "test_more_more_ops() (in module tensor_mloperations)": [[22, "tensor_mloperations.test_more_more_ops"]], "test_more_ops() (in module tensor_mloperations)": [[22, "tensor_mloperations.test_more_ops"]], "test_ops() (in module tensor_mloperations)": [[22, "tensor_mloperations.test_ops"]], "tensor_moperations": [[23, "module-tensor_moperations"]], "test_more_ops() (in module tensor_moperations)": [[23, "tensor_moperations.test_more_ops"]], "test_more_reductions() (in module tensor_moperations)": [[23, "tensor_moperations.test_more_reductions"]], "test_reductions() (in module tensor_moperations)": [[23, "tensor_moperations.test_reductions"]], "test_sanity_check() (in module tensor_moperations)": [[23, "tensor_moperations.test_sanity_check"]]}})